import discord
import asyncio
from SQLconnector import * 

async def reactEyes(message):
    try:
        await message.add_reaction('\N{EYES}')
    except discord.HTTPException:
        pass

async def reactTrophies(message):
    try:
        await message.add_reaction('\N{TROPHY}')
        await message.add_reaction('üëç') 
    except discord.HTTPException:
        pass



async def cmdGeneral(message, pieces):
    try:
        invocation = pieces[1]
        command = pieces[2]
        parameter = pieces[3]
    except:
        invocation = ""
        command = ""
        parameter = ""
        await message.channel.send('`An error has been encountered. Request not processed`')

    if command.lower() == "status":
        await cmdStatus(message)
    elif command.lower() == "redact":
        await cmdRedact(message)
    elif command.lower() == "help":
        await cmdHelp(message)
    elif command.lower() == "historical":
        await cmdHistorical(message)
    else:
        await cmdNotFound(message)
    

async def cmdStatus(message):
    await message.channel.send('**Bot Status: **`Active`\t ‚úÖ')

    try:
        conn = connectToSource()
        
        cursor = conn.cursor()
        sql = """ with data as (select row_number() over (partition by healthstatus order by finished desc ) as row, * from public."jobsView")
        select * from data where finished is null or (finished is not null and row <= 3 and row > 0)
        order by finished desc, started asc"""
        cursor.execute(sql)
        results = cursor.fetchall()
        await message.channel.send('**DB Status: **`Connected`\t ‚úÖ')
    except:
        await message.channel.send('**DB Status: **`Disabled`\t ‚ùå')
        
    outStr = ""
    for result in results:
        outStr = outStr + "> %s\t%s\t%s   %s \n" % (result[4][-5:],result[1],result[3],result[7]) 
    outStr = "Active and recent DB jobs \n```%s```" % (outStr)
    await message.channel.send(outStr)



async def cmdRedact(message):

    msg = await message.channel.send('This message will self destruct in 3 seconds ')
    await asyncio.sleep(3.0)
    await msg.edit(content='[DATA REDACTED]')
    await asyncio.sleep(3.0)
    await msg.edit(content='[‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] ')
    await asyncio.sleep(30.0)
    await msg.delete()

async def cmdHelp(message):
    msg = await message.channel.send('''Thank you for contacting ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà for assistance. 
Unfortunately you are not authorised to receive assistance from ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà resources. 
Remain Calm.
        
You are cleared for the following instructions.
> `!00718274602 redact` - this command provides a brief example of proper data redaction processes.
> `!00718274602 status` - This command details recent activities within the ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà application. 
> `!00718274602 help` - displays this message.
> `!00718274602 historical` - briefly retells a incident report from the ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà
\n at this time direct conversations are ‚ñà‚ñà‚ñà monitored by ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà. '''
              
        )
async def cmdNotFound(message):
    msg = await message.channel.send('''Unrecognised or unauthorised request. Try `!00718274602 help`''')

async def cmdHistorical(message):
    text = '''Did you ever ‚ñà‚ñà‚ñà‚ñà the ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà of ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà The ‚ñà‚ñà‚ñà‚ñà? 
I thought not. It‚Äôs not a ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà would ‚ñà‚ñà‚ñà‚ñà you.
It‚Äôs a ‚ñà‚ñà‚ñà‚ñà legend. ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà was a ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà of ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà, so powerful and so wise ‚ñà‚ñà could use the ‚ñà‚ñà‚ñà‚ñà‚ñà to ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà the ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà to create ‚ñà‚ñà‚ñà‚ñà‚Ä¶ 
‚ñà‚ñà had such a knowledge of ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà that ‚ñà‚ñà could even keep the ones ‚ñà‚ñà cared about from ‚ñà‚ñà‚ñà‚ñà‚ñà. 
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà. 
‚ñà‚ñà became so powerful‚Ä¶ the only thing ‚ñà‚ñà was ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà of was losing ‚ñà‚ñà‚ñà power, which eventually, of course, ‚ñà‚ñà ‚ñà‚ñà‚ñà. 
Unfortunately, ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà everything ‚ñà‚ñà knew, then ‚ñà‚ñà‚ñà apprentice killed ‚ñà‚ñà‚ñà in ‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà. 
Ironic. ‚ñà‚ñà could ‚ñà‚ñà‚ñà‚ñà others from ‚ñà‚ñà‚ñà‚ñà‚ñà, but not ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà.'''
    msg = await message.channel.send(text)
    await asyncio.sleep(10.0)
    await msg.delete()
